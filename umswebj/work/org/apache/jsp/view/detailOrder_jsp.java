/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-26 01:08:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Order;
import bean.OrderDetail;
import bean.OrderStatus;
import ;
import java.util.ArrayList;

public final class detailOrder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1687495309217L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("");
    _jspx_imports_classes.add("bean.OrderDetail");
    _jspx_imports_classes.add("bean.Order");
    _jspx_imports_classes.add("bean.OrderStatus");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String error = (String) request.getAttribute("error");
	ArrayList<OrderDetail> detailList = (ArrayList<OrderDetail>) request.getAttribute("detailList");
	OrderStatus orderStatus = (OrderStatus)request.getAttribute("orderStatus");
	OrderDetail orderDetail = new OrderDetail();
	int totalPrice = 0; //個数*金額
	int sum = 0; //合計金額の合算

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>ユニフォーム受注管理システム</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<hr style=\"height: 5; background-color: #0000FF\" />\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<a href=\"./orderList\">[受注一覧へ戻る]</a>\r\n");
      out.write("\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<p style=\"text-align: center; font-size: 24px\">受注詳細情報</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<hr style=\"height: 4; background-color: #000000\" />\r\n");
      out.write("\t<table style=\"margin: auto; border: 0;\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=2 style=\"text-align: center\"><a\r\n");
      out.write("\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/StatusUpdateServlet?orderNumber=");
      out.print(orderStatus.getOrderNum());
      out.write("&cmd=updateOrder\">\r\n");
      out.write("\t\t\t\t<input\r\n");
      out.write("\t\t\t\t\ttype=\"submit\" value=\"更新\"></a>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tcolspan=2 style=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">個人情報</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">氏名</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(orderStatus.getName());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">メールアドレス</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(orderStatus.getMail() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">住所</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(orderStatus.getAddress());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tcolspan=2 style=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">購入商品</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
for(int i = 0;i < detailList.size(); i++){ 
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tcolspan=2 style=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">");
      out.print(i );
      out.write("番目</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">種類</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(detailList.get(i).getProduct());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">金額</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(detailList.get(i).getPrice());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">個数</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(detailList.get(i).getCount());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
 totalPrice= detailList.get(i).getPrice()*detailList.get(i).getCount();
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">合計金額</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(totalPrice);
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"colspan=2; background-color: #00FA9A; text-align: left; padding-right: 45px;\">&nbsp;</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
sum += totalPrice; 
      out.write("\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tcolspan=2 style=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">注文情報</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">お支払い金額</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(sum );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">入金状況</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(orderStatus.getPaymentStatus());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">配送状況</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(orderStatus.getDeliveryStatus());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">発注日</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(orderStatus.getPurchaseOrderDate());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #66CCFF; text-align: left; padding-right: 45px;\">備考</th>\r\n");
      out.write("\t\t\t<td\r\n");
      out.write("\t\t\t\tstyle=\"background-color: #00FA9A; text-align: left; padding-right: 45px;\">");
      out.print(orderStatus.getNote());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
      out.write("<footer style=\"text-align:left; position:absolute; bottom:100; width:100%\">\r\n");
      out.write("\t<hr style=\"height:3; background-color:#32CD32\"/>\r\n");
      out.write("\t<p style=\"font-color:#00FF00\">Copyright(C)2023 All Right Reserved</p>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
